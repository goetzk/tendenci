# NOTE: Shelved project. 
# I will come back to this when I have time to spare or Travis have updated their build environments.

# But why not use the existing platform and install the required packages (Django 1.11, Python 3, T11, etc)?
# Because then I'm not testing Tendenci in its intended environment, I'm testing in a legacy environment.

# Stuff I gathered while trying to figure out a dockerised build:
# https://raw.githubusercontent.com/bitcoin/bitcoin/master/.travis.yml
# https://docs.travis-ci.com/user/docker/#Building-a-Docker-Image-from-a-Dockerfile
# https://medium.com/mobileforgood/patterns-for-continuous-integration-with-docker-on-travis-ci-71857fff14c5
# https://forums.habitat.sh/t/testing-travic-ci-workflows-locally-in-docker/630
# https://travis-ci.org/goetzk/tendenci/jobs/401098969

# Another good (clean, simple) looking example
# https://github.com/tschifftner/ansible-role-duplicity/blob/master/.travis.yml

# Tendenci 11
# Note that this can't be used yet - Travis only uses Ubuntu 14.04 on its servers
# https://github.com/travis-ci/travis-ci/issues/9460
language: python
python:
  - "3.4"
  - "3.5"
  - "3.6"

services: docker
 
env:
  - distro: ubuntu1804
  - distro: ubuntu1604
  global:
    # Work around boto issue https://github.com/travis-ci/travis-ci/issues/5246#issuecomment-166460882 , https://github.com/tendenci/tendenci/issues/539#issuecomment-345092987
    - BOTO_CONFIG=/doesnotexist
    # for $TENDENCI_TRANSIFEX_PASSWORD
    - secure: "H3pfvt1czYywa1Fp+quLeWqHOTqZVXDeyoCAFCthi4FO7YYvj8FpaRefUJ8iBIpN/NKImJkGGAh10KWkWXwhwWf2IZQmjTpYRZ0EltkhLyHDIQugoKCnt6VSfPUcrBwZBbA5mBI1JWtSWuN6MnrwMbM9XPpYf4o85OpZZnBdCN8="

before_install:
 - docker pull ubuntu/18.04
 - sudo apt-get -qq update
 - sudo apt-get install build-essential python3-dev libevent-dev libpq-dev libjpeg8 libjpeg-dev libfreetype6 libfreetype6-dev flake8
 - docker ps -a

# command to install dependencies
install:
 - cd ../..
 - pip install -q "Django>=1.11,<2.0"
 - pip install -e $TRAVIS_BUILD_DIR
 - django-admin.py startproject --template=https://github.com/tendenci/tendenci-project-template/archive/tendenci11.zip testsuite_tendenci
 - cd testsuite_tendenci
 - pip install --no-binary psycopg2 -r requirements/dev.txt --upgrade

before_script:
 - psql -c "CREATE USER tendenci WITH PASSWORD 'tendenci';"
 - psql -c "ALTER USER tendenci SUPERUSER;"
 - psql -c "ALTER ROLE tendenci SET client_encoding TO 'UTF8';"
 - psql -c "ALTER ROLE tendenci SET default_transaction_isolation TO 'read committed';"
 - psql -c "CREATE DATABASE tendenci WITH OWNER tendenci;"
 - psql -c "GRANT ALL PRIVILEGES ON DATABASE tendenci TO tendenci;"
 - psql -d tendenci_testsuite -c "CREATE EXTENSION postgis;"
 - psql -d tendenci_testsuite -c "CREATE EXTENSION postgis_topology;"
 - psql -d tendenci_testsuite -c "CREATE EXTENSION fuzzystrmatch;"
 - psql -d tendenci_testsuite -c "CREATE EXTENSION postgis_tiger_geocoder;"
 - sed -i -e 's/#DEBUG = True/DEBUG = True/g' conf/settings.py
#  - echo -e '\nALLOWED_HOSTS = ["*"]' >> conf/settings.py # allow all, use if things fail because of hostnames
 - echo -e "\nINSTALLED_APPS += ('markdown_deux', 'bootstrapform', 'tendenci.apps.helpdesk',)" >> conf/settings.py
 - echo -e "\nSECRET_KEY = 'p1DKDS5ySMtDcb9rv6lpW1GxnghGxGvmMAy33WbfkzZPXnDgZlVF2hRdOCLVi3e'" >> conf/settings.py
 - echo -e "\nSITE_SETTINGS_KEY = 'p1DKDS5ySMtDcb9rv6lpW1GxnghGxGvmMAy33WbfkzZPXnDgZlVF2hRdOCLVi34'" >> conf/settings.py
 
script:
 # Deploy Tendenci
 - python manage.py initial_migrate
 - python manage.py deploy
 - python manage.py load_tendenci2018_defaults
 - python manage.py set_setting site global siteurl 'https://www.example.com'
 # Run tests
 - flake8
 - python ./manage.py test --keepdb --verbosity 2
# - python ./manage.py test tendenci --keepdb --verbosity 2

after_success:
 # Run command to push source and translation files to Transifex
 - ./transifex.sh
